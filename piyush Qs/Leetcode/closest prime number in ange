class Solution {
public:
    bool isPrime(int num) {
        if (num < 2) return false;
        if (num == 2) return true;
        if (num % 2 == 0) return false;
        for (int i = 3; i * i <= num; i += 2) {
            if (num % i == 0) return false;
        }
        return true;
    }

    vector<int> closestPrimes(int left, int right) {
        vector<int> primes;
        for (int i = left; i <= right; i++) {
            if (isPrime(i)) {
                primes.push_back(i);
            }
        }

        if (primes.size() < 2) return {-1, -1};

        vector<int> ans = {-1, -1};
        int minDiff = INT_MAX;

        for (int i = 0; i < primes.size() - 1; i++) {
            int diff = primes[i + 1] - primes[i];
            if (diff < minDiff) {
                ans = {primes[i], primes[i + 1]};
                minDiff = diff;
            }
            if (diff == 2) break;
        }

        return ans;
    }
};
