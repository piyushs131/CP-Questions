/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {

        if ( root == NULL){
            return 0 ;
        }

        int sum = INT_MIN;
        int lvl = 0;
        int ans = 0;


        queue<TreeNode*>q;
        q.push(root);

        while(!q.empty()){

            lvl++;
            int sum1 = 0;
            int n = q.size();



            for ( int i = 0;  i < n; i++){
                TreeNode* Node = q.front();
                q.pop();
                sum1 += Node -> val;
            
         
         if ( Node -> left != NULL){
            q.push(Node->left);
         }

         if ( Node -> right != NULL){
            q.push(Node -> right);
         }

        }

        if ( sum < sum1){
            sum = sum1;
            ans = lvl;
        }
        }
        return ans;
        
    }
};