class Solution {
public:
    int numsum(int digit){
        int tmp=0;
        while(digit>0)
        {
            tmp+=digit%10;
            digit = digit/10;
        }
        return tmp;
    }
    int maximumSum(vector<int>& nums) {
        int n = nums.size();
        unordered_map<int,pair<int,int>> mp;
        int ans = -1;
        
        for(int i=0;i<n;i++)
        {
            int s = numsum(nums[i]);
            auto it = mp.find(s);
            if(it != mp.end()){
                int first = it->second.first;
                int second = it->second.second;

                if(nums[i] > first){
                    second = first;
                    first = nums[i];
                }
                else if(nums[i] > second){
                    second = nums[i];
                }
                it->second = {first,second};

                if(second != -1){
                    ans = max(ans,first+second);
                }
                
            }
            else{
                mp[s] = {nums[i],-1};
            }
        }
        
    return ans;
    }
};