class Solution {
public:
    vector<vector<int>> sortMatrix(vector<vector<int>>& grid) {
        
        int n = grid.size();

        unordered_map<int,vector<int>>mp;

        for ( int i = 0; i < n; i++){
            for ( int j = 0; j < n; j++){
                mp[i-j].push_back(grid[i][j]);
            }
        }

        for ( auto& it : mp){
            int k = it.first;
            vector<int>&vec = it.second;

            if ( k >= 0){
                sort( vec.rbegin(), vec.rend());
            }
            else{
                sort(vec.begin(),vec.end());
            }
        }

        for ( int i = 0; i < n; i++){
            for ( int j = 0; j < n; j++){
                int k = i - j;
                grid[i][j] = mp[k].front();
                mp[k].erase(mp[k].begin());
            }
        }

        return grid;
    }
};