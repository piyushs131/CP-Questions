// struct TreeNode {
//     int val;
//     TreeNode *left;
//     TreeNode *right;
    
//     TreeNode() : val(0), left(nullptr), right(nullptr) {}
//     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
//     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
// };

class FindElements {
private:
    unordered_set<int> s;

    void recover(TreeNode* root, int data) {
        if (root == nullptr) return;

        root->val = data;
        s.insert(data);

        recover(root->left, 2 * data + 1);
        recover(root->right, 2 * data + 2);
    }

public:
    FindElements(TreeNode* root) {
        if (root) recover(root, 0);
    }
    
    bool find(int target) {
        return s.find(target) != s.end();
    }
};
